<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SavingAnalyticObjects />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top products Parameter ' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='1' max='17' min='1' />
      </column>
      <column caption='Bottom products Parameter ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='4'>
        <calculation class='tableau' formula='4' />
        <range granularity='1' max='18' min='1' />
      </column>
      <column caption='TOP customer&apos;s ' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='9'>
        <calculation class='tableau' formula='9' />
        <range granularity='1' max='793' min='1' />
      </column>
      <column caption='BOTTOM Customer&apos;s' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range granularity='1' max='793' min='1' />
      </column>
      <column caption='Parameter 5' datatype='integer' name='[Parameter 5]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range granularity='1' max='793' min='1' />
      </column>
    </datasource>
    <datasource caption='Orders (Superstore Dataset)' inline='true' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore Dataset' name='excel-direct.1d89mno1yzlmo213yd2m61xxs2mf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/ashok/DATA ANALYST PUNE 12 JULY/Tableau/Superstore Dataset.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1d89mno1yzlmo213yd2m61xxs2mf' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_7B60A6DD8B1B45919338731CCE433913]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Apple&quot;'>
            <value>&quot;Apple EarPods with Remote and Mic&quot;</value>
            <value>&quot;Apple iPhone 5&quot;</value>
            <value>&quot;Apple iPhone 5C&quot;</value>
            <value>&quot;Apple iPhone 5S&quot;</value>
            <value>&quot;iKross Bluetooth Portable Keyboard + Cell Phone Stand Holder + Brush for Apple iPhone 5S 5C 5, 4S 4&quot;</value>
            <value>&quot;LF Elite 3D Dazzle Designer Hard Case Cover, Lf Stylus Pen and Wiper For Apple Iphone 5c Mini Lite&quot;</value>
            <value>&quot;Seidio BD2-HK3IPH5-BK DILEX Case and Holster Combo for Apple iPhone 5/5s - Black&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Canon&quot;'>
            <value>&quot;Canon Color ImageCLASS MF8580Cdw Wireless Laser All-In-One Printer, Copier, Scanner&quot;</value>
            <value>&quot;Canon Image Class D660 Copier&quot;</value>
            <value>&quot;Canon imageCLASS 2200 Advanced Copier&quot;</value>
            <value>&quot;Canon Imageclass D680 Copier / Fax&quot;</value>
            <value>&quot;Canon imageCLASS MF7460 Monochrome Digital Laser Multifunction Copier&quot;</value>
            <value>&quot;Canon PC-428 Personal Copier&quot;</value>
            <value>&quot;Canon PC1060 Personal Laser Copier&quot;</value>
            <value>&quot;Canon PC1080F Personal Copier&quot;</value>
            <value>&quot;Canon PC170 Desktop Personal Copier&quot;</value>
            <value>&quot;Canon PC940 Copier&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Panasonic&quot;'>
            <value>&quot;Panasonic Business Telephones KX-T7736&quot;</value>
            <value>&quot;Panasonic KP-150 Electric Pencil Sharpener&quot;</value>
            <value>&quot;Panasonic KP-310 Heavy-Duty Electric Pencil Sharpener&quot;</value>
            <value>&quot;Panasonic KP-350BK Electric Pencil Sharpener with Auto Stop&quot;</value>
            <value>&quot;Panasonic KP-380BK Classic Electric Pencil Sharpener&quot;</value>
            <value>&quot;Panasonic KP-4ABK Battery-Operated Pencil Sharpener&quot;</value>
            <value>&quot;Panasonic KX - TS880B Telephone&quot;</value>
            <value>&quot;Panasonic KX MB2061 Multifunction Printer&quot;</value>
            <value>&quot;Panasonic KX MC6040 Color Laser Multifunction Printer&quot;</value>
            <value>&quot;Panasonic KX T7731-B Digital phone&quot;</value>
            <value>&quot;Panasonic KX T7736-B Digital phone&quot;</value>
            <value>&quot;Panasonic KX TS208W Corded phone&quot;</value>
            <value>&quot;Panasonic KX TS3282B Corded phone&quot;</value>
            <value>&quot;Panasonic KX TS3282W Corded phone&quot;</value>
            <value>&quot;Panasonic KX-TG6844B Expandable Digital Cordless Telephone&quot;</value>
            <value>&quot;Panasonic KX-TG9471B&quot;</value>
            <value>&quot;Panasonic KX-TG9541B DECT 6.0 Digital 2-Line Expandable Cordless Phone With Digital Answering System&quot;</value>
            <value>&quot;Panasonic Kx-TS550&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Xerox&quot;'>
            <value>&quot;Xerox 188&quot;</value>
            <value>&quot;Xerox 1880&quot;</value>
            <value>&quot;Xerox 1881&quot;</value>
            <value>&quot;Xerox 1882&quot;</value>
            <value>&quot;Xerox 1883&quot;</value>
            <value>&quot;Xerox 1884&quot;</value>
            <value>&quot;Xerox 1885&quot;</value>
            <value>&quot;Xerox 1886&quot;</value>
            <value>&quot;Xerox 1887&quot;</value>
            <value>&quot;Xerox 1888&quot;</value>
            <value>&quot;Xerox 1889&quot;</value>
            <value>&quot;Xerox 189&quot;</value>
            <value>&quot;Xerox 1890&quot;</value>
            <value>&quot;Xerox 1891&quot;</value>
            <value>&quot;Xerox 1892&quot;</value>
            <value>&quot;Xerox 1893&quot;</value>
            <value>&quot;Xerox 1894&quot;</value>
            <value>&quot;Xerox 1895&quot;</value>
            <value>&quot;Xerox 1896&quot;</value>
            <value>&quot;Xerox 1897&quot;</value>
            <value>&quot;Xerox 1898&quot;</value>
            <value>&quot;Xerox 1899&quot;</value>
            <value>&quot;Xerox 19&quot;</value>
            <value>&quot;Xerox 190&quot;</value>
            <value>&quot;Xerox 1900&quot;</value>
            <value>&quot;Xerox 1901&quot;</value>
            <value>&quot;Xerox 1902&quot;</value>
            <value>&quot;Xerox 1903&quot;</value>
            <value>&quot;Xerox 1905&quot;</value>
            <value>&quot;Xerox 1906&quot;</value>
            <value>&quot;Xerox 1907&quot;</value>
            <value>&quot;Xerox 1908&quot;</value>
            <value>&quot;Xerox 1909&quot;</value>
            <value>&quot;Xerox 191&quot;</value>
            <value>&quot;Xerox 1910&quot;</value>
            <value>&quot;Xerox 1911&quot;</value>
            <value>&quot;Xerox 1912&quot;</value>
            <value>&quot;Xerox 1913&quot;</value>
            <value>&quot;Xerox 1914&quot;</value>
            <value>&quot;Xerox 1915&quot;</value>
            <value>&quot;Xerox 1916&quot;</value>
            <value>&quot;Xerox 1917&quot;</value>
            <value>&quot;Xerox 1918&quot;</value>
            <value>&quot;Xerox 1919&quot;</value>
            <value>&quot;Xerox 192&quot;</value>
            <value>&quot;Xerox 1920&quot;</value>
            <value>&quot;Xerox 1921&quot;</value>
            <value>&quot;Xerox 1922&quot;</value>
            <value>&quot;Xerox 1923&quot;</value>
            <value>&quot;Xerox 1924&quot;</value>
            <value>&quot;Xerox 1925&quot;</value>
            <value>&quot;Xerox 1926&quot;</value>
            <value>&quot;Xerox 1927&quot;</value>
            <value>&quot;Xerox 1928&quot;</value>
            <value>&quot;Xerox 1929&quot;</value>
            <value>&quot;Xerox 193&quot;</value>
            <value>&quot;Xerox 1930&quot;</value>
            <value>&quot;Xerox 1931&quot;</value>
            <value>&quot;Xerox 1932&quot;</value>
            <value>&quot;Xerox 1933&quot;</value>
            <value>&quot;Xerox 1934&quot;</value>
            <value>&quot;Xerox 1935&quot;</value>
            <value>&quot;Xerox 1936&quot;</value>
            <value>&quot;Xerox 1937&quot;</value>
            <value>&quot;Xerox 1938&quot;</value>
            <value>&quot;Xerox 1939&quot;</value>
            <value>&quot;Xerox 194&quot;</value>
            <value>&quot;Xerox 1940&quot;</value>
            <value>&quot;Xerox 1941&quot;</value>
            <value>&quot;Xerox 1942&quot;</value>
            <value>&quot;Xerox 1943&quot;</value>
            <value>&quot;Xerox 1944&quot;</value>
            <value>&quot;Xerox 1945&quot;</value>
            <value>&quot;Xerox 1946&quot;</value>
            <value>&quot;Xerox 1947&quot;</value>
            <value>&quot;Xerox 1948&quot;</value>
            <value>&quot;Xerox 1949&quot;</value>
            <value>&quot;Xerox 195&quot;</value>
            <value>&quot;Xerox 1950&quot;</value>
            <value>&quot;Xerox 1951&quot;</value>
            <value>&quot;Xerox 1952&quot;</value>
            <value>&quot;Xerox 1953&quot;</value>
            <value>&quot;Xerox 1954&quot;</value>
            <value>&quot;Xerox 1955&quot;</value>
            <value>&quot;Xerox 1956&quot;</value>
            <value>&quot;Xerox 1957&quot;</value>
            <value>&quot;Xerox 1958&quot;</value>
            <value>&quot;Xerox 1959&quot;</value>
            <value>&quot;Xerox 196&quot;</value>
            <value>&quot;Xerox 1960&quot;</value>
            <value>&quot;Xerox 1962&quot;</value>
            <value>&quot;Xerox 1963&quot;</value>
            <value>&quot;Xerox 1964&quot;</value>
            <value>&quot;Xerox 1965&quot;</value>
            <value>&quot;Xerox 1966&quot;</value>
            <value>&quot;Xerox 1967&quot;</value>
            <value>&quot;Xerox 1968&quot;</value>
            <value>&quot;Xerox 1969&quot;</value>
            <value>&quot;Xerox 197&quot;</value>
            <value>&quot;Xerox 1970&quot;</value>
            <value>&quot;Xerox 1971&quot;</value>
            <value>&quot;Xerox 1972&quot;</value>
            <value>&quot;Xerox 1973&quot;</value>
            <value>&quot;Xerox 1974&quot;</value>
            <value>&quot;Xerox 1975&quot;</value>
            <value>&quot;Xerox 1976&quot;</value>
            <value>&quot;Xerox 1977&quot;</value>
            <value>&quot;Xerox 1978&quot;</value>
            <value>&quot;Xerox 1979&quot;</value>
            <value>&quot;Xerox 198&quot;</value>
            <value>&quot;Xerox 1980&quot;</value>
            <value>&quot;Xerox 1981&quot;</value>
            <value>&quot;Xerox 1982&quot;</value>
            <value>&quot;Xerox 1983&quot;</value>
            <value>&quot;Xerox 1984&quot;</value>
            <value>&quot;Xerox 1985&quot;</value>
            <value>&quot;Xerox 1986&quot;</value>
            <value>&quot;Xerox 1987&quot;</value>
            <value>&quot;Xerox 1988&quot;</value>
            <value>&quot;Xerox 1989&quot;</value>
            <value>&quot;Xerox 199&quot;</value>
            <value>&quot;Xerox 1990&quot;</value>
            <value>&quot;Xerox 1991&quot;</value>
            <value>&quot;Xerox 1992&quot;</value>
            <value>&quot;Xerox 1993&quot;</value>
            <value>&quot;Xerox 1994&quot;</value>
            <value>&quot;Xerox 1995&quot;</value>
            <value>&quot;Xerox 1996&quot;</value>
            <value>&quot;Xerox 1997&quot;</value>
            <value>&quot;Xerox 1998&quot;</value>
            <value>&quot;Xerox 1999&quot;</value>
            <value>&quot;Xerox 2&quot;</value>
            <value>&quot;Xerox 20&quot;</value>
            <value>&quot;Xerox 200&quot;</value>
            <value>&quot;Xerox 2000&quot;</value>
            <value>&quot;Xerox 201&quot;</value>
            <value>&quot;Xerox 202&quot;</value>
            <value>&quot;Xerox 203&quot;</value>
            <value>&quot;Xerox 204&quot;</value>
            <value>&quot;Xerox 205&quot;</value>
            <value>&quot;Xerox 206&quot;</value>
            <value>&quot;Xerox 207&quot;</value>
            <value>&quot;Xerox 208&quot;</value>
            <value>&quot;Xerox 209&quot;</value>
            <value>&quot;Xerox 21&quot;</value>
            <value>&quot;Xerox 210&quot;</value>
            <value>&quot;Xerox 211&quot;</value>
            <value>&quot;Xerox 212&quot;</value>
            <value>&quot;Xerox 213&quot;</value>
            <value>&quot;Xerox 214&quot;</value>
            <value>&quot;Xerox 215&quot;</value>
            <value>&quot;Xerox 216&quot;</value>
            <value>&quot;Xerox 217&quot;</value>
            <value>&quot;Xerox 218&quot;</value>
            <value>&quot;Xerox 219&quot;</value>
            <value>&quot;Xerox 22&quot;</value>
            <value>&quot;Xerox 220&quot;</value>
            <value>&quot;Xerox 221&quot;</value>
            <value>&quot;Xerox 222&quot;</value>
            <value>&quot;Xerox 223&quot;</value>
            <value>&quot;Xerox 224&quot;</value>
            <value>&quot;Xerox 225&quot;</value>
            <value>&quot;Xerox 226&quot;</value>
            <value>&quot;Xerox 227&quot;</value>
            <value>&quot;Xerox 228&quot;</value>
            <value>&quot;Xerox 229&quot;</value>
            <value>&quot;Xerox 23&quot;</value>
            <value>&quot;Xerox 230&quot;</value>
            <value>&quot;Xerox 231&quot;</value>
            <value>&quot;Xerox 232&quot;</value>
            <value>&quot;Xerox 4200 Series MultiUse Premium Copy Paper (20Lb. and 84 Bright)&quot;</value>
            <value>&quot;Xerox Blank Computer Paper&quot;</value>
            <value>&quot;Xerox Color Copier Paper, 11\&quot; x 17\&quot;, Ream&quot;</value>
            <value>&quot;Xerox WorkCentre 6505DN Laser Multifunction Printer&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_7B60A6DD8B1B45919338731CCE433913]' role='measure' type='quantitative' />
      <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Bottom 10 cust. set' name='[Bottom 5 cust. set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='top 10 cust. set' name='[Customer Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Bottom 5 cust. set]' function='reference' />
          <groupfilter field='[Customer Name Set]' function='reference' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Customer Name Set:nk]' type='palette'>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Resi Pölking&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peter Bühler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy Französisch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neil Französisch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{30e08f86-1931-4b86-992c-0b9a6e94c742}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Profit:qk]' />
            <field name='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[AdhocCluster:1]' />
        </result-fields>
      </analytic-model>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_7B60A6DD8B1B45919338731CCE433913'>
            <properties context=''>
              <relation connection='excel-direct.1d89mno1yzlmo213yd2m61xxs2mf' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='(bottom) PARAMETER'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bottom products Parameter ' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range granularity='1' max='18' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{E77923FB-5D05-4ADB-8C93-ED0AA12C4822}' />
    </worksheet>
    <worksheet name='(top) PARAMETER'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top products Parameter ' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='1' max='17' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{92CB24B3-41A6-47BD-8CAC-92625B25021E}' />
    </worksheet>
    <worksheet name='ASSIGNMENT '>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#555555e6' />
            <format attr='fill-color' id='annotation_1' value='#333333e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[io:Customer Name Set:nk]' />
              <size column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' />
              <wedge-size column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[pcto:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='398'>
            <formatted-text>
              <run bold='true' fontcolor='#aaff00' fontsize='14'>TOP 10 CUSTOMERS CONTRIBUTION</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.509971'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.2464'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='290' y='-59' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='273'>
            <formatted-text>
              <run bold='true' fontcolor='#aaff00' fontsize='12'>OTHER CUSTOMER CONTRIBUTION</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.432099'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.6864'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-211' y='55' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{7A01879E-534B-4D3E-849E-28EA9C940DAB}' />
    </worksheet>
    <worksheet name='Bottom 10 Customers as per sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Segoe Print'>Bottom &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Segoe Print'>[Parameters].[Parameter 4]</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Segoe Print'>&gt;  Customer&apos;s Based On Their Sale&apos;s</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='BOTTOM Customer&apos;s' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='1' max='793' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 4]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#14ffd8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
            <format attr='font-family' value='Times New Roman' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#fff9bb' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{C05E002F-B17E-4BFB-8F8F-B5952B7666F0}' />
    </worksheet>
    <worksheet name='CLUSTER&apos;S'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{30e08f86-1931-4b86-992c-0b9a6e94c742}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Profit:qk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{48F5F650-E707-4354-950F-84852DD20EBA}' />
    </worksheet>
    <worksheet name='FORECAST '>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[fVal:sum:Sales:qk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[tyr:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{5B04166F-48A0-41BA-9313-E170741A44E5}' />
    </worksheet>
    <worksheet name='GROUPING'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Segoe Print' fontsize='18'>GROUPING</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Apple&quot;'>
                  <value>&quot;Apple EarPods with Remote and Mic&quot;</value>
                  <value>&quot;Apple iPhone 5&quot;</value>
                  <value>&quot;Apple iPhone 5C&quot;</value>
                  <value>&quot;Apple iPhone 5S&quot;</value>
                  <value>&quot;iKross Bluetooth Portable Keyboard + Cell Phone Stand Holder + Brush for Apple iPhone 5S 5C 5, 4S 4&quot;</value>
                  <value>&quot;LF Elite 3D Dazzle Designer Hard Case Cover, Lf Stylus Pen and Wiper For Apple Iphone 5c Mini Lite&quot;</value>
                  <value>&quot;Seidio BD2-HK3IPH5-BK DILEX Case and Holster Combo for Apple iPhone 5/5s - Black&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Canon&quot;'>
                  <value>&quot;Canon Color ImageCLASS MF8580Cdw Wireless Laser All-In-One Printer, Copier, Scanner&quot;</value>
                  <value>&quot;Canon Image Class D660 Copier&quot;</value>
                  <value>&quot;Canon imageCLASS 2200 Advanced Copier&quot;</value>
                  <value>&quot;Canon Imageclass D680 Copier / Fax&quot;</value>
                  <value>&quot;Canon imageCLASS MF7460 Monochrome Digital Laser Multifunction Copier&quot;</value>
                  <value>&quot;Canon PC-428 Personal Copier&quot;</value>
                  <value>&quot;Canon PC1060 Personal Laser Copier&quot;</value>
                  <value>&quot;Canon PC1080F Personal Copier&quot;</value>
                  <value>&quot;Canon PC170 Desktop Personal Copier&quot;</value>
                  <value>&quot;Canon PC940 Copier&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Panasonic&quot;'>
                  <value>&quot;Panasonic Business Telephones KX-T7736&quot;</value>
                  <value>&quot;Panasonic KP-150 Electric Pencil Sharpener&quot;</value>
                  <value>&quot;Panasonic KP-310 Heavy-Duty Electric Pencil Sharpener&quot;</value>
                  <value>&quot;Panasonic KP-350BK Electric Pencil Sharpener with Auto Stop&quot;</value>
                  <value>&quot;Panasonic KP-380BK Classic Electric Pencil Sharpener&quot;</value>
                  <value>&quot;Panasonic KP-4ABK Battery-Operated Pencil Sharpener&quot;</value>
                  <value>&quot;Panasonic KX - TS880B Telephone&quot;</value>
                  <value>&quot;Panasonic KX MB2061 Multifunction Printer&quot;</value>
                  <value>&quot;Panasonic KX MC6040 Color Laser Multifunction Printer&quot;</value>
                  <value>&quot;Panasonic KX T7731-B Digital phone&quot;</value>
                  <value>&quot;Panasonic KX T7736-B Digital phone&quot;</value>
                  <value>&quot;Panasonic KX TS208W Corded phone&quot;</value>
                  <value>&quot;Panasonic KX TS3282B Corded phone&quot;</value>
                  <value>&quot;Panasonic KX TS3282W Corded phone&quot;</value>
                  <value>&quot;Panasonic KX-TG6844B Expandable Digital Cordless Telephone&quot;</value>
                  <value>&quot;Panasonic KX-TG9471B&quot;</value>
                  <value>&quot;Panasonic KX-TG9541B DECT 6.0 Digital 2-Line Expandable Cordless Phone With Digital Answering System&quot;</value>
                  <value>&quot;Panasonic Kx-TS550&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Xerox&quot;'>
                  <value>&quot;Xerox 188&quot;</value>
                  <value>&quot;Xerox 1880&quot;</value>
                  <value>&quot;Xerox 1881&quot;</value>
                  <value>&quot;Xerox 1882&quot;</value>
                  <value>&quot;Xerox 1883&quot;</value>
                  <value>&quot;Xerox 1884&quot;</value>
                  <value>&quot;Xerox 1885&quot;</value>
                  <value>&quot;Xerox 1886&quot;</value>
                  <value>&quot;Xerox 1887&quot;</value>
                  <value>&quot;Xerox 1888&quot;</value>
                  <value>&quot;Xerox 1889&quot;</value>
                  <value>&quot;Xerox 189&quot;</value>
                  <value>&quot;Xerox 1890&quot;</value>
                  <value>&quot;Xerox 1891&quot;</value>
                  <value>&quot;Xerox 1892&quot;</value>
                  <value>&quot;Xerox 1893&quot;</value>
                  <value>&quot;Xerox 1894&quot;</value>
                  <value>&quot;Xerox 1895&quot;</value>
                  <value>&quot;Xerox 1896&quot;</value>
                  <value>&quot;Xerox 1897&quot;</value>
                  <value>&quot;Xerox 1898&quot;</value>
                  <value>&quot;Xerox 1899&quot;</value>
                  <value>&quot;Xerox 19&quot;</value>
                  <value>&quot;Xerox 190&quot;</value>
                  <value>&quot;Xerox 1900&quot;</value>
                  <value>&quot;Xerox 1901&quot;</value>
                  <value>&quot;Xerox 1902&quot;</value>
                  <value>&quot;Xerox 1903&quot;</value>
                  <value>&quot;Xerox 1905&quot;</value>
                  <value>&quot;Xerox 1906&quot;</value>
                  <value>&quot;Xerox 1907&quot;</value>
                  <value>&quot;Xerox 1908&quot;</value>
                  <value>&quot;Xerox 1909&quot;</value>
                  <value>&quot;Xerox 191&quot;</value>
                  <value>&quot;Xerox 1910&quot;</value>
                  <value>&quot;Xerox 1911&quot;</value>
                  <value>&quot;Xerox 1912&quot;</value>
                  <value>&quot;Xerox 1913&quot;</value>
                  <value>&quot;Xerox 1914&quot;</value>
                  <value>&quot;Xerox 1915&quot;</value>
                  <value>&quot;Xerox 1916&quot;</value>
                  <value>&quot;Xerox 1917&quot;</value>
                  <value>&quot;Xerox 1918&quot;</value>
                  <value>&quot;Xerox 1919&quot;</value>
                  <value>&quot;Xerox 192&quot;</value>
                  <value>&quot;Xerox 1920&quot;</value>
                  <value>&quot;Xerox 1921&quot;</value>
                  <value>&quot;Xerox 1922&quot;</value>
                  <value>&quot;Xerox 1923&quot;</value>
                  <value>&quot;Xerox 1924&quot;</value>
                  <value>&quot;Xerox 1925&quot;</value>
                  <value>&quot;Xerox 1926&quot;</value>
                  <value>&quot;Xerox 1927&quot;</value>
                  <value>&quot;Xerox 1928&quot;</value>
                  <value>&quot;Xerox 1929&quot;</value>
                  <value>&quot;Xerox 193&quot;</value>
                  <value>&quot;Xerox 1930&quot;</value>
                  <value>&quot;Xerox 1931&quot;</value>
                  <value>&quot;Xerox 1932&quot;</value>
                  <value>&quot;Xerox 1933&quot;</value>
                  <value>&quot;Xerox 1934&quot;</value>
                  <value>&quot;Xerox 1935&quot;</value>
                  <value>&quot;Xerox 1936&quot;</value>
                  <value>&quot;Xerox 1937&quot;</value>
                  <value>&quot;Xerox 1938&quot;</value>
                  <value>&quot;Xerox 1939&quot;</value>
                  <value>&quot;Xerox 194&quot;</value>
                  <value>&quot;Xerox 1940&quot;</value>
                  <value>&quot;Xerox 1941&quot;</value>
                  <value>&quot;Xerox 1942&quot;</value>
                  <value>&quot;Xerox 1943&quot;</value>
                  <value>&quot;Xerox 1944&quot;</value>
                  <value>&quot;Xerox 1945&quot;</value>
                  <value>&quot;Xerox 1946&quot;</value>
                  <value>&quot;Xerox 1947&quot;</value>
                  <value>&quot;Xerox 1948&quot;</value>
                  <value>&quot;Xerox 1949&quot;</value>
                  <value>&quot;Xerox 195&quot;</value>
                  <value>&quot;Xerox 1950&quot;</value>
                  <value>&quot;Xerox 1951&quot;</value>
                  <value>&quot;Xerox 1952&quot;</value>
                  <value>&quot;Xerox 1953&quot;</value>
                  <value>&quot;Xerox 1954&quot;</value>
                  <value>&quot;Xerox 1955&quot;</value>
                  <value>&quot;Xerox 1956&quot;</value>
                  <value>&quot;Xerox 1957&quot;</value>
                  <value>&quot;Xerox 1958&quot;</value>
                  <value>&quot;Xerox 1959&quot;</value>
                  <value>&quot;Xerox 196&quot;</value>
                  <value>&quot;Xerox 1960&quot;</value>
                  <value>&quot;Xerox 1962&quot;</value>
                  <value>&quot;Xerox 1963&quot;</value>
                  <value>&quot;Xerox 1964&quot;</value>
                  <value>&quot;Xerox 1965&quot;</value>
                  <value>&quot;Xerox 1966&quot;</value>
                  <value>&quot;Xerox 1967&quot;</value>
                  <value>&quot;Xerox 1968&quot;</value>
                  <value>&quot;Xerox 1969&quot;</value>
                  <value>&quot;Xerox 197&quot;</value>
                  <value>&quot;Xerox 1970&quot;</value>
                  <value>&quot;Xerox 1971&quot;</value>
                  <value>&quot;Xerox 1972&quot;</value>
                  <value>&quot;Xerox 1973&quot;</value>
                  <value>&quot;Xerox 1974&quot;</value>
                  <value>&quot;Xerox 1975&quot;</value>
                  <value>&quot;Xerox 1976&quot;</value>
                  <value>&quot;Xerox 1977&quot;</value>
                  <value>&quot;Xerox 1978&quot;</value>
                  <value>&quot;Xerox 1979&quot;</value>
                  <value>&quot;Xerox 198&quot;</value>
                  <value>&quot;Xerox 1980&quot;</value>
                  <value>&quot;Xerox 1981&quot;</value>
                  <value>&quot;Xerox 1982&quot;</value>
                  <value>&quot;Xerox 1983&quot;</value>
                  <value>&quot;Xerox 1984&quot;</value>
                  <value>&quot;Xerox 1985&quot;</value>
                  <value>&quot;Xerox 1986&quot;</value>
                  <value>&quot;Xerox 1987&quot;</value>
                  <value>&quot;Xerox 1988&quot;</value>
                  <value>&quot;Xerox 1989&quot;</value>
                  <value>&quot;Xerox 199&quot;</value>
                  <value>&quot;Xerox 1990&quot;</value>
                  <value>&quot;Xerox 1991&quot;</value>
                  <value>&quot;Xerox 1992&quot;</value>
                  <value>&quot;Xerox 1993&quot;</value>
                  <value>&quot;Xerox 1994&quot;</value>
                  <value>&quot;Xerox 1995&quot;</value>
                  <value>&quot;Xerox 1996&quot;</value>
                  <value>&quot;Xerox 1997&quot;</value>
                  <value>&quot;Xerox 1998&quot;</value>
                  <value>&quot;Xerox 1999&quot;</value>
                  <value>&quot;Xerox 2&quot;</value>
                  <value>&quot;Xerox 20&quot;</value>
                  <value>&quot;Xerox 200&quot;</value>
                  <value>&quot;Xerox 2000&quot;</value>
                  <value>&quot;Xerox 201&quot;</value>
                  <value>&quot;Xerox 202&quot;</value>
                  <value>&quot;Xerox 203&quot;</value>
                  <value>&quot;Xerox 204&quot;</value>
                  <value>&quot;Xerox 205&quot;</value>
                  <value>&quot;Xerox 206&quot;</value>
                  <value>&quot;Xerox 207&quot;</value>
                  <value>&quot;Xerox 208&quot;</value>
                  <value>&quot;Xerox 209&quot;</value>
                  <value>&quot;Xerox 21&quot;</value>
                  <value>&quot;Xerox 210&quot;</value>
                  <value>&quot;Xerox 211&quot;</value>
                  <value>&quot;Xerox 212&quot;</value>
                  <value>&quot;Xerox 213&quot;</value>
                  <value>&quot;Xerox 214&quot;</value>
                  <value>&quot;Xerox 215&quot;</value>
                  <value>&quot;Xerox 216&quot;</value>
                  <value>&quot;Xerox 217&quot;</value>
                  <value>&quot;Xerox 218&quot;</value>
                  <value>&quot;Xerox 219&quot;</value>
                  <value>&quot;Xerox 22&quot;</value>
                  <value>&quot;Xerox 220&quot;</value>
                  <value>&quot;Xerox 221&quot;</value>
                  <value>&quot;Xerox 222&quot;</value>
                  <value>&quot;Xerox 223&quot;</value>
                  <value>&quot;Xerox 224&quot;</value>
                  <value>&quot;Xerox 225&quot;</value>
                  <value>&quot;Xerox 226&quot;</value>
                  <value>&quot;Xerox 227&quot;</value>
                  <value>&quot;Xerox 228&quot;</value>
                  <value>&quot;Xerox 229&quot;</value>
                  <value>&quot;Xerox 23&quot;</value>
                  <value>&quot;Xerox 230&quot;</value>
                  <value>&quot;Xerox 231&quot;</value>
                  <value>&quot;Xerox 232&quot;</value>
                  <value>&quot;Xerox 4200 Series MultiUse Premium Copy Paper (20Lb. and 84 Bright)&quot;</value>
                  <value>&quot;Xerox Blank Computer Paper&quot;</value>
                  <value>&quot;Xerox Color Copier Paper, 11\&quot; x 17\&quot;, Ream&quot;</value>
                  <value>&quot;Xerox WorkCentre 6505DN Laser Multifunction Printer&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[Product Name (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Name (group)]' />
              <groupfilter function='member' level='[Product Name (group)]' member='&quot;Other&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[Product Name (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[Product Name (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ffc43a' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#fff9bb' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[Product Name (group)]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{6C698485-C4D8-478C-82F4-5CE164A1EB8B}' />
    </worksheet>
    <worksheet name='TABLE ACROSS'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]' value='74' />
            <format attr='width' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]' value='125' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{7EEEB4A1-4E3F-4687-93C5-062112D951FE}' />
    </worksheet>
    <worksheet name='TABLE ACROSS (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]' value='74' />
            <format attr='width' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]' value='125' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[diff:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{FBEAB89D-D39F-46C8-A1FF-6C80A003D5F4}' />
    </worksheet>
    <worksheet name='TABLE ACROSS THEN DOWN'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]' value='91' />
            <format attr='width' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]' value='203' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{5B1B1419-7F8E-40D6-8AC5-33F5FA8ECF17}' />
    </worksheet>
    <worksheet name='TABLE ACROSS THEN DOWN (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk:4]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Table' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]' value='91' />
            <format attr='width' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]' value='203' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[diff:sum:Sales:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{B1A938C5-4B80-4CED-8C09-087EAC078C6E}' />
    </worksheet>
    <worksheet name='TABLE DOWN'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]' value='74' />
            <format attr='width' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]' value='125' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{B705000A-E0B4-41B3-93F6-819B622CC0F3}' />
    </worksheet>
    <worksheet name='TABLE DOWN (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]' value='74' />
            <format attr='width' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]' value='125' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[diff:sum:Sales:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{9BB92A5A-99D0-486A-A1B4-A87654890BA0}' />
    </worksheet>
    <worksheet name='TABLE DOWN THEN ACORSS'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]' value='101' />
            <format attr='width' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]' value='241' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{B5D7FB82-6383-4011-83E7-0A83FB42982A}' />
    </worksheet>
    <worksheet name='TABLE DOWN THEN ACORSS (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk:6]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='TableCol' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]' value='101' />
            <format attr='width' field='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]' value='241' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[diff:sum:Sales:qk:6]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{BA860228-47D5-497D-A0E7-022DB6325B62}' />
    </worksheet>
    <worksheet name='TOP 10 CUSTOMER AS PER SALES'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Sanskrit Text' fontsize='18'>Top &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Sanskrit Text' fontsize='18'>[Parameters].[Parameter 3]</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Sanskrit Text' fontsize='18'>&gt; Customer Name&apos;s Based On Sale&apos;s</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TOP customer&apos;s ' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='9'>
              <calculation class='tableau' formula='9' />
              <range granularity='1' max='793' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 3]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#14ffd8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
            <format attr='font-family' value='Times New Roman' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#fff9bb' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{C92B6F8A-A798-45C6-8260-073D260782CA}' />
    </worksheet>
    <worksheet name='TOP AND BOTTOM CUSTOMER&quot;S (SET)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Garamond'>TOP AND BOTTOM CUSTOMER&quot;S (SET)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore Dataset)' name='federated.1xqxc5z11xjdvq169qyre0yxbddj' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqxc5z11xjdvq169qyre0yxbddj'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#14ffd8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
            <format attr='font-family' value='Times New Roman' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#fff9bb' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]</rows>
        <cols>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{263FFB48-F3EA-4DE7-A589-237041508C38}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='GROUPING'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[Product Name (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6BC6597F-8CAA-42D1-AF49-E88E6D56C0DA}' />
    </window>
    <window class='worksheet' name='(top) PARAMETER'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A0A5A28-B808-4D32-851D-66D43EAB85AD}' />
    </window>
    <window class='worksheet' name='(bottom) PARAMETER'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{532E723B-1E03-4562-AF54-B0EA43AFCB25}' />
    </window>
    <window class='worksheet' name='TOP 10 CUSTOMER AS PER SALES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71D33B79-E976-43E9-946F-EDFBCEF3E091}' />
    </window>
    <window class='worksheet' name='Bottom 10 Customers as per sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4F6ECE7-C2C7-4F2A-8984-C8A1078F2C76}' />
    </window>
    <window class='worksheet' maximized='true' name='TOP AND BOTTOM CUSTOMER&quot;S (SET)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[Set 1]</field>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[io:Customer Name Set:nk]</field>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D15E3720-33FF-40BE-8771-22327E87A6E9}' />
    </window>
    <window class='worksheet' name='ASSIGNMENT '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[io:Customer Name Set:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[Set 2]</field>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[io:Customer Name Set 10:nk]</field>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[io:Customer Name Set 2:nk]</field>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[io:Customer Name Set:nk]</field>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Customer Name:nk]</field>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D316512-1153-4338-8524-A601496C395D}' />
    </window>
    <window class='worksheet' name='TABLE ACROSS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3282B82D-5003-4C7B-AA4E-F4ABAE5F6014}' />
    </window>
    <window class='worksheet' name='TABLE ACROSS (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82BC12AD-C628-4EBA-87A4-9569E8A7A0E6}' />
    </window>
    <window class='worksheet' name='TABLE DOWN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B5B288E0-4735-4E2A-B76E-E667CA5F2CFB}' />
    </window>
    <window class='worksheet' name='TABLE DOWN (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF177EA2-A0F4-41C4-BF03-1B680664B30C}' />
    </window>
    <window class='worksheet' name='TABLE ACROSS THEN DOWN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]</field>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3EF31F8-1D23-4086-8037-F8B52DED6CEB}' />
    </window>
    <window class='worksheet' name='TABLE ACROSS THEN DOWN (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Category:nk]</field>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8ABE96C6-2D49-4D61-BC4B-3222CC620BBA}' />
    </window>
    <window class='worksheet' name='TABLE DOWN THEN ACORSS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{028132F1-7CD3-49A8-867F-7FF769911D42}' />
    </window>
    <window class='worksheet' name='TABLE DOWN THEN ACORSS (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C53C7F7A-8C38-4FEA-AE61-C200284BDB1A}' />
    </window>
    <window class='worksheet' name='FORECAST '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='4' />
      </viewpoint>
      <simple-id uuid='{24DD3055-4967-4A99-8B7E-AC6FFEFECD9F}' />
    </window>
    <window class='worksheet' name='CLUSTER&apos;S'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqxc5z11xjdvq169qyre0yxbddj].[none:AdhocCluster:1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7D86A8D-98ED-4193-B5D9-F899C2EC2750}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='(bottom) PARAMETER' width='192'>
      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
      nwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(top) PARAMETER' width='192'>
      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
      EgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ASSIGNMENT ' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Bottom 10 Customers as per sales' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CLUSTER&apos;S' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='FORECAST ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GROUPING' width='192'>
      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
      af8H1jFQLd/McUgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TABLE ACROSS' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TABLE ACROSS (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TABLE ACROSS THEN DOWN' width='192'>
      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
      f5huPGyuSxaNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TABLE ACROSS THEN DOWN (2)' width='192'>
      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
      QtUkAKFq/w/w0/ftOmdxugAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TABLE DOWN' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TABLE DOWN (2)' width='192'>
      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
      aCIAgqL9P3cnAfWmBamuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TABLE DOWN THEN ACORSS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TABLE DOWN THEN ACORSS (2)' width='192'>
      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
      KE0CEEr7X5+/ypsJuBCiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TOP 10 CUSTOMER AS PER SALES' width='192'>
      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
      NJBDNOYyoRwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TOP AND BOTTOM CUSTOMER&quot;S (SET)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
